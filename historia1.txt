configuracion de git
hola soy exequiel desde otra pc
git init para inicializar
git config=muestra todas las configuraciones de git
git config --list=muestra toda la configuracion por defecto
git config --list --show-origin=muetra dnd estan las configuraciones guardadas
git --config --global user.name=esto cambiara todos los usuarios globales (el nombre va entre comillas dobles)
git --config --global user.email=aca colocamos el correo electronico en cmillas dobles
git log (nombre del archivo)=muestra el historial de commit
git show(nombre del archivo)=muestra los cambios q se efectuaron en el archivo.
git diff =muestra las diferencias entre 2 archivos.
hay 2 tipos de reset hard (duro) y  soft(sueve):
git reset(#comint) --hard =nos permite volver todo a una version anterior del archivo(colocando el numero de comint)borra todo el archivo y vuelve al comit anterior.
git reset(#comint) --soft =nos permite volver  a una version anterior del archivo pero conservando staying area(colocando el numero de comint)
git log --stat= muestra los cambio especificos en todos los archivos.
git checkout (numero de commit) nombre del archivo de regreso = muetra y regresa a como era el archivo en ese momento del commit.
git checkout (master nombre del archivo de regreso)=regresa al archivo actual.
<!-- branch -->
git branch -> muestra todas las ramas
git branch $nombreDeLaNuevaRama -> crea un branch nuevos
git checkout $nombreDeBranch -> Cambia de branch
git merge $nombreDeBranch -> fuciona dos ramas

<!-- comandos para traer data del repositorio remoto -->
git fetch -> descarga y actualiza un estado del repositorio remoto al repositorio local pero no al directorio de trabajo.
git merge -> deacarga y actualiza  los archivos en el directorio de trabajo .
git pull -> descarga y actualiza un estado del repositorio remoto al repositorio local y a los archivos(directorio de trabajo) (osea combina un fetch y un merge)

<!-- comandos para ver estados -->
git status -> muestra el estado del commit antes de enviarse
git log -> muestra un registro de los commits
git commit -am =  esto  hace un git add . de un archivo ya existente.

GitHub
blame=muestra quienes a generado commit
git pull  origin master --allow-unrelated-histories = sirve para forzar el merges

Crear una llave ssh
ssh-keygen -t rsa -b 4096 -C "deangelisricardoexequiel@gmail.com"= especifica que algoritmo de cifrado vamos a usar en este caso rsa y -su complejidad e email.

revisando el servidor de ssh  en windows

eval $(ssh-agent -s) = nos deber entretgar Agent pid 2528 significa q el proceso esta corriendo.

$ ssh-add ~/.ssh/id_rsa = agrega mi llave ssh privada a mi  repo.

~ =es nuetro home.

$ git remote set-url  origin git@github.com:RicardoDeAngelis/hyperblog.git= cambiar la url del repo.
